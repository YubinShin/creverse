generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Student {
  id          Int          @id @default(autoincrement())
  name        String
  createdAt   DateTime     @default(now()) @map("created_at")
  submissions Submission[]

  @@map("student")
}

model Submission {
  id                  Int             @id @default(autoincrement())
  studentId           Int             @map("student_id")
  student             Student         @relation(fields: [studentId], references: [id])
  componentType       String          @map("component_type")
  submitText          String          @map("submit_text")
  status              String          @default("PENDING")
  retryCount          Int             @default(0) @map("retry_count")
  lastError           String?         @map("last_error")
  score               Int?
  feedback            String?
  highlights          String?
  highlightSubmitText String?         @map("highlight_submit_text")
  videoPath           String?         @map("video_path")
  audioPath           String?         @map("audio_path")
  apiLatency          Int?            @map("api_latency")
  createdAt           DateTime        @default(now()) @map("created_at")
  updatedAt           DateTime        @updatedAt @map("updated_at")
  logs                SubmissionLog[]
  revisions           Revision[]

  @@map("submission")
}

model SubmissionLog {
  id           Int        @id @default(autoincrement())
  submissionId Int        @map("submission_id")
  submission   Submission @relation(fields: [submissionId], references: [id])
  phase        String
  uri          String
  status       String
  latencyMs    Int?       @map("latency_ms")
  traceId      String?    @map("trace_id")
  message      String?
  createdAt    DateTime   @default(now()) @map("created_at")

  @@map("submission_log")
}

model Revision {
  id           Int        @id @default(autoincrement())
  submissionId Int        @map("submission_id")
  submission   Submission @relation(fields: [submissionId], references: [id])
  prevStatus   String     @map("prev_status")
  newStatus    String     @map("new_status")
  reason       String?
  createdAt    DateTime   @default(now()) @map("created_at")

  @@map("revision")
}
